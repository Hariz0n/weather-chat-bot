from telebot import types
from db import BotDB
from shedule import ScheduleBot
from TOKEN import TOKEN
import telebot

bot = telebot.TeleBot(TOKEN)
botDB = BotDB('db.db')
scheduleBot = ScheduleBot()


class MenuHandler:
    markup = None

    def __init__(self):
        self.current_menu = 'main'
        self.previous_menu = ''
        self.menu_markup = {
            'main': {
                'buttons': ['‚òÄÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É', 'üåü –û—Ü–µ–Ω–∏—Ç–µ –Ω–∞—Å', '–ò–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥', '–û–ø–æ–≤–µ—â–µ–Ω–∏—è'],
                'on_change': "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π"
            },
            'rate_us': {
                'buttons': ['1', '2', '3', '4', '5', '–ù–∞–∑–∞–¥'],
                'on_change': "–î–ª—è –æ—Ü–µ–Ω–∫–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: "
            },
            'weather_info': {
                'buttons': ['–ù–∞ –≥–ª–∞–≤–Ω—É—é', '–ò–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥'],
                'on_change': ['–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π: ']
            },
            'enter_city_name': {
                'buttons': ['–ù–∞–∑–∞–¥'],
                'on_change': '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞'
            },
            "set_notification": {
                'buttons': ["–ù–∞ –≥–ª–∞–≤–Ω—É—é"],
            },
            'notifications': {
                'buttons': ["–°–æ–∑–¥–∞—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ"],
                'on_change': "–í–∞—à–∏ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è: "
            },
            'notification_details': {
                'buttons': ['–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è', '–ò–∑–º–µ–Ω–∏—Ç—å –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏', '–£–¥–∞–ª–∏—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ', '–ù–∞–∑–∞–¥ –∫ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è–º']
            },
            'notification_edit_time': {
                'buttons': ['–ù–∞–∑–∞–¥'],
                'on_change': '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –≤—Ä–µ–º—è: '
            },
            'notification_edit_date': {
                'buttons': [],
            },
            'notification_edit_date_enter': {
                'buttons': ['–ù–∞–∑–∞–¥'],
                'on_change': '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏: '
            },
            "set_notification_set_date": {
                'buttons': [],
                'on_change': '–í—ã–±–µ—Ä–∏—Ç–µ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏ –∏ –Ω–∞–∂–º–∏—Ç–µ \'–î–∞–ª–µ–µ\': '
            },
            'set_notification_set_time': {
                'buttons': ['–ù–∞–∑–∞–¥'],
                'on_change': '–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –æ–ø–æ–≤–µ—â–µ–Ω–∏—è (HH:MM): '
            },
            'error': {
                'buttons': ['–ù–∞ –≥–ª–∞–≤–Ω—É—é']
            }
        }

    def change_menu(self, menu_name, user_id):
        self.previous_menu = self.current_menu
        self.current_menu = menu_name
        self.markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        buttons = [types.KeyboardButton(i) for i in self.menu_markup[menu_name]['buttons']]
        for button in buttons:
            self.markup.add(button)
        if menu_name == "notifications":
            self.set_notifications_screen_markup(user_id)
        elif menu_name == 'notification_edit_date_enter' or menu_name == "set_notification_set_date":
            self.set_edit_date_markup()
        if 'on_change' in self.menu_markup[self.current_menu]:
            bot.send_message(str(user_id), self.menu_markup[self.current_menu]['on_change'], reply_markup=self.markup)

    def goto_previous_menu(self, user_id):
        if self.previous_menu != '':
            self.change_menu(self.previous_menu, user_id)

    pass

    def set_notifications_screen_markup(self, user_id):
        schedule = botDB.get_schedule(user_id)
        for date in schedule:
            self.markup.add(f'{date} - {schedule[date]}')
        self.markup.add('–ù–∞ –≥–ª–∞–≤–Ω—É—é')

    def set_edit_date_markup(self):
        self.markup.add('–î–∞–ª–µ–µ')
        for date in ['–ü–ù', '–í–¢', '–°–†', '–ß–¢', '–ü–¢', '–°–ë', '–í–°']:
            self.markup.add(f'{date}')
        self.markup.add('–ù–∞ –≥–ª–∞–≤–Ω—É—é')


menu_handler = MenuHandler()
